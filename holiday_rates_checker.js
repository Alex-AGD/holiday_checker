const axios = require("axios");

async function checkHolidaysAndRates() {
  const apiKey = process.env.HOLIDAY_API_KEY;
  const currentDate = new Date();
  const year = 2022;
  const month = currentDate.getMonth() + 1;
  const day = currentDate.getDate();

  try {
    const [holidayResponse, ratesResponse] = await Promise.all([
      axios.get(
        `https://holidayapi.com/v1/holidays?country=BY&year=${year}&month=${month}&day=${day}&key=${apiKey}`
      ),
      axios.get("https://api.nbrb.by/exrates/rates?periodicity=0"),
    ]);

    let message = "üóì –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç:\n\n";

    const holidays = holidayResponse.data.holidays || [];
    if (holidays.length > 0) {
      message += "üéâ –í —ç—Ç–æ—Ç –¥–µ–Ω—å –≤ –ø—Ä–æ—à–ª–æ–º –≥–æ–¥—É –±—ã–ª–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏:\n";
      holidays.forEach((holiday) => {
        message += `- ${holiday.name}\n`;
      });
    } else {
      message += "üìÖ –í —ç—Ç–æ—Ç –¥–µ–Ω—å –≤ –ø—Ä–æ—à–ª–æ–º –≥–æ–¥—É –Ω–µ –±—ã–ª–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤\n";
    }

    message += "\nüí∞ –¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç:\n";
    const mainCurrencies = ratesResponse.data.filter((rate) =>
      ["USD", "EUR", "RUB"].includes(rate.Cur_Abbreviation)
    );
    mainCurrencies.forEach((currency) => {
      message += `${currency.Cur_Abbreviation}: ${currency.Cur_OfficialRate} BYN\n`;
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Slack
    await axios.post(process.env.SLACK_WEBHOOK_URL, { text: message });
    console.log("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Slack");
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞:", error.message);
    if (error.response) {
      console.error("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:", error.response.data);
    }
    throw error;
  }
}
checkHolidaysAndRates().catch((error) => {
  console.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
  process.exit(1);
});
